import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score, f1_score, confusion_matrix, ConfusionMatrixDisplay
import matplotlib.pyplot as plt

# 1. Load Dataset
data = pd.read_csv('FRD.csv')  # Use your correct path

# 2. Features and Target
X = data.drop('label', axis=1)
y = data['label']

# 3. Drop high-cardinality columns
high_card_cols = [col for col in X.columns if X[col].dtype == 'object' and X[col].nunique() > 100]
X = X.drop(columns=high_card_cols)

# 4. One-hot encode remaining categorical columns
X = pd.get_dummies(X)

# 5. Train-Test Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 6. Feature Scaling
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# 7. Train Linear SVM
svm_model = SVC(kernel='linear', random_state=42)
svm_model.fit(X_train, y_train)
y_pred = svm_model.predict(X_test)

# 8. Evaluation
accuracy = accuracy_score(y_test, y_pred)
f1 = f1_score(y_test, y_pred, average='binary')  # Use 'macro' if multi-class
cm = confusion_matrix(y_test, y_pred)

print("Linear SVM Accuracy:", accuracy)
print("F1 Score:", f1)

# 9. Confusion Matrix
disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=['Human', 'Computer'])
disp.plot(cmap='Oranges')
plt.title("Confusion Matrix - Linear SVM")
plt.show()
